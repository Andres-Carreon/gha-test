name: clone repo

on:
  workflow_dispatch:
  # Allows you to run this workflow manually from the Actions tab

env:
  owner: "ExodusMovement"
  repository: "exodus-mobile"

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -leo pipefail {0}

    steps:
      - name: Env info check
        run: |
          echo '--- SHELL check ---'
          echo '$SHELL: ' `echo $SHELL`
          echo '$BASH_VERSION ' `echo $BASH_VERSION`
          echo '--- user check ---'
          echo 'whoami:' `whoami`
          echo '$HOME:' $HOME
          echo 'pwd:' `pwd`
          echo '~:' `echo ~`
          echo '--- PATH check ---'
          echo '$PATH:' $PATH
          echo '--- version check ---'
          echo 'watchman version: ' `watchman --version`
          echo 'maestro version: ' `maestro -v`
          echo 'nvm version: ' `nvm -v`
          echo 'node version: ' `node -v`
          echo 'yarn version: ' `yarn -v`
          echo 'playwright version: ' `npx playwright --version`

      - name: install playwright
        run: |
          npx playwright install
          echo 'playwright version: ' `npx playwright --version`

      - name: Checkout app repository
        uses: actions/checkout@v2

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Debug SSH key
        run: |
          ls -la ~/.ssh
          cat ~/.ssh/id_rsa
          ssh -T git@github.com || true

      - name: Clone exodus-browser repository
        run: |
          git clone git@github.com:ExodusMovement/exodus-browser.git
          echo "Cloned repository location:"
          echo "$(pwd)/exodus-browser"

      - name: Navigate to cloned repository
        run: |
          cd exodus-browser
          echo "Current directory: $(pwd)"

      - name: List contents of current directory
        run: |
          cd exodus-browser
          echo "exodus browser list"
          ls -la
          cd apps
          echo "apps list"
          ls -la
          cd browser
          echo "browser list"
          ls -al
          git branch
          cat package.json
          pwd
          ls -la

      - name: Use Node.js 20.9.0
        run: |
          nvm install 20.9.0
          nvm use 20.9.0
          echo 'node version: ' `node -v`
          echo 'npm version: ' `npm -v`

      - name: Run yarn and yarn dev and wait for compilation
        run: |
          cd exodus-browser
          cd apps
          cd browser
          cat package.json
          nvm install 20.9.0
          nvm use 20.9.0
          echo 'node version: ' `node -v`
          echo 'npm version: ' `npm -v`
          pwd
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          # Run yarn dev in the background
          ( yarn dev & )
          # Save the PID of the yarn dev process
          PID=$!
          # Wait for the specific message and then kill the yarn dev process
          tail -f --pid=$PID nohup.out | { grep -q '｢wdm｣: Compiled successfully.' && kill -INT $PID; }

      - name: Next step after compilation
        run: |
          echo "Compilation successful. Proceeding to the next step."
          # Add your next commands here
